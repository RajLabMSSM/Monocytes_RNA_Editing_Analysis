mynd_gene_mito<-merge(mynd_gene_mito,meta_pd_control, by ="Sample")
mynd_gene_mito<-mynd_gene_mito%>%column_to_rownames("Sample")
text_size =14
title_text_size=14
legend_size =1
legend_text_size = 10
pd_control_mito_plot<-mynd_gene_mito%>%
pivot_longer(where(is.numeric), names_to ="metric", values_to="value") %>%
ggplot(aes(x=Disease, y=value))+
geom_jitter(aes(color=Disease), alpha=0.4, width=0.25, size = 1)+
geom_boxplot(fill=NA)+
stat_compare_means(label = "p.signif",
label.x =1.395,label.y = 1) +
facet_wrap(~metric, scales="free_y")+
theme_bw()+labs(y = "log(Expression TPM)", x = " ") +
theme(axis.text.y=element_text(size=text_size),
axis.text.x=element_blank())+
theme(text = element_text(size = text_size))+
theme(axis.title.x = element_blank())+
labs(title="Mitochondrial Gene Expression by Disease")+
theme(plot.title = element_text(size=title_text_size, face="bold", hjust=0.5))+
theme(legend.position="bottom")+
theme(legend.key.size = unit(legend_size,'cm'),
legend.title = element_text(color = "black", size =legend_text_size),
legend.text = element_text(color = "black", size =legend_text_size))+
guides(colour = guide_legend(override.aes = list(size=5)))
pd_control_mito_plot
load("/Users/hyominseo/Desktop/RAJ/Gene_Differential/Basal/MyND_811_gene_data.RData")
mynd_tpm<-mynd_tpm%>%mutate_all(funs(z=log2((.)+1)))
mynd_tpm<-mynd_tpm%>%rownames_to_column("GENEID")
gencode<-read_tsv("gencode.v30.tx2gene.tsv")%>%
distinct(GENEID, .keep_all=TRUE)%>%dplyr::select(-c("TXNAME"))
mynd_gene<-merge(mynd_tpm,gencode, by ="GENEID")
mynd_gene_mito<-mynd_gene%>%dplyr::filter(GENENAME %in% mito_gene$GENENAME)
mynd_gene_mito<-mynd_gene_mito%>%column_to_rownames("GENENAME")%>%
dplyr::select(-c(GENEID))
meta_pd_control<-meta%>%dplyr::filter(grepl("PD|Control",Disease))
meta_pd_control<-meta_pd_control%>%dplyr::rename("Sample" = "sample")
mynd_gene_mito<-as.data.frame(t(mynd_gene_mito))
mynd_gene_mito<-mynd_gene_mito%>%rownames_to_column("Sample")
mynd_gene_mito<-mynd_gene_mito%>%dplyr::filter(Sample %in%
meta_pd_control$Sample)
DEG_path<-read_tsv("Basal/gp_data/Custom_PD_Control_DEG_Path.tsv")
DES_path<-read_tsv("Basal/gp_data/Custom_PD_Control_DESites_Path.tsv")
DEG_path_match<-DEG_path%>%dplyr::filter(term_name %in% DES_path$term_name)
DES_path_match<-DES_path%>%dplyr::filter(term_name %in% DEG_path$term_name)
# 1024
DEG_path<-process_path(DEG_path_match)%>%dplyr::rename("logP_DEG" = "log_P_value")
# 643
DES_path<-process_path(DES_path_match)%>%dplyr::rename("logP_DES" = "log_P_value")
# inner_join DEGene and DESite pathway by term id
DEG_DES_path_go<-inner_join(DEG_path, DES_path, by = "term_id")
filepath<-"/Users/hyominseo/Desktop/RAJ/Gene_Differential/Basal/TopTable"
write_tsv(DEG_DES_path_go, file = file.path(filepath, "PD_DEG_DES_path_match.tsv"))
Path<-(c("DEG_path","DES_path","DEG_DES_inner_join"))
Count<-(c(as.integer(nrow(DEG_path)), as.integer(nrow(DES_path)),as.integer(nrow(DEG_DES_path_go))))
Unique_id<-(c(as.integer(length(unique(DEG_path$term_id))),
as.integer(length(unique(DES_path$term_id))),
as.integer(length(unique(DEG_DES_path_go$term_id)))))
df<-data_frame(Path, Count, Unique_id)
writeLines("td, th { padding : 6px } th { background-color : blue ; color : white; border : 1px solid white; } td { color : blue ; border : 1px solid blue }", con = "mystyle.css")
knitr::kable(df, "simple", caption = "DEGenes_DESites_pathway", table.attr = "style='width:100%;'",col.names=c("Path", "Count","Unique ID"))
path_pval_plot<-function(table_in,plot_title,point_size,text_size,title_text_size,inplot_text_size){
t<-read_tsv(table_in)
plot<-ggplot(data= t, aes(x = t$logP_DEG, y = t$logP_DES))+
geom_point(aes(color=source.x),alpha=0.8,size = point_size)+
stat_cor(size = inplot_text_size)+
geom_smooth(method = "lm", se = FALSE, colour="black", size=0.6)+
theme_bw()+
facet_wrap(facets =~source.x, scales ='free')+
labs(title = plot_title)+
theme(plot.title = element_text(size=title_text_size, face="bold", hjust=0.5),
axis.title.x = element_text(size =text_size),
axis.title.y = element_text(size =text_size))+
xlab("logP_DEGene")+ylab("logP_DESite")+
theme(legend.position ='none')
plot
}
```
text_size =10
title_text_size = 12
point_size=2
legend_size = 0.8
legend_text_size = 12
label_size = 4
pd_path_pval_plot<-path_pval_plot("Basal/TopTable/PD_DEG_DES_path_match.tsv","Basal Monocytes DESites and DEGenes Shared Pathways",point_size,text_size,title_text_size)
path_pval_plot<-function(table_in,plot_title,point_size,text_size,title_text_size){
t<-read_tsv(table_in)
plot<-ggplot(data= t, aes(x = t$logP_DEG, y = t$logP_DES))+
geom_point(aes(color=source.x),alpha=0.8,size = point_size)+
stat_cor(size = inplot_text_size)+
geom_smooth(method = "lm", se = FALSE, colour="black", size=0.6)+
theme_bw()+
facet_wrap(facets =~source.x, scales ='free')+
labs(title = plot_title)+
theme(plot.title = element_text(size=title_text_size, face="bold", hjust=0.5),
axis.title.x = element_text(size =text_size),
axis.title.y = element_text(size =text_size))+
xlab("logP_DEGene")+ylab("logP_DESite")+
theme(legend.position ='none')
plot
}
text_size =10
title_text_size = 12
point_size=2
legend_size = 0.8
legend_text_size = 12
label_size = 4
pd_path_pval_plot<-path_pval_plot("Basal/TopTable/PD_DEG_DES_path_match.tsv","Basal Monocytes DESites and DEGenes Shared Pathways",point_size,text_size,title_text_size)
ggsave(plot=pd_path_pval_plot,filename="Basal/Figures/figure3:pd_path_pval_plot.jpg",width = 8, height = 5,dpi = 600)
knitr::include_graphics("MyND/Figures/figure3:pd_path_pval_plot.jpg")
knitr::include_graphics("Basal/Figures/figure3:pd_path_pval_plot.jpg")
knitr::include_graphics("MyND/Figures/figure_1/all_plot.jpg")
knitr::include_graphics("Basal/Figures/figure_1/all_plot.jpg")
text_size =12
title_text_size = 12
point_size=2
legend_size = 0.6
legend_text_size = 8
label_size = 2
inplot_text_size=4
#load("/Users/hyominseo/Desktop/RAJ/Basal_Limma/Rdata/pd_vol_anno_plot.RData")
pd_vol_plot<-vol_plot("Basal/TopTable/PD_Control_P_Gene.tsv",point_size, text_size, title_text_size, "Differentially Expressed Genes",label_size)
pd_path_pval_plot<-path_pval_plot("Basal/TopTable/PD_DEG_DES_path_match.tsv","Shared Pathways",point_size,text_size,title_text_size,inplot_text_size)
text_size =12
title_text_size = 12
point_size=2
legend_size = 0.6
legend_text_size = 8
label_size = 2
inplot_text_size=4
#load("/Users/hyominseo/Desktop/RAJ/Basal_Limma/Rdata/pd_vol_anno_plot.RData")
pd_vol_plot<-vol_plot("Basal/TopTable/PD_Control_P_Gene.tsv",point_size, text_size, title_text_size, "Differentially Expressed Genes",label_size)
pd_path_pval_plot<-path_pval_plot("Basal/TopTable/PD_DEG_DES_path_match.tsv","Shared Pathways",point_size,text_size,title_text_size,inplot_text_size,2)
text_size =12
title_text_size = 12
point_size=2
legend_size = 0.6
legend_text_size = 8
label_size = 2
inplot_text_size=4
#load("/Users/hyominseo/Desktop/RAJ/Basal_Limma/Rdata/pd_vol_anno_plot.RData")
pd_vol_plot<-vol_plot("Basal/TopTable/PD_Control_P_Gene.tsv",point_size, text_size, title_text_size, "Differentially Expressed Genes",label_size)
pd_path_pval_plot<-path_pval_plot("Basal/TopTable/PD_DEG_DES_path_match.tsv","Shared Pathways",point_size,text_size,title_text_size)
pd_1<-ggarrange(pd_vol_plot, pd_path_pval_plot,
labels=c("C","D"),
font.label=list(color="black",size= text_size),
ncol=2)
pd_mut_logfc_plot<-mut_logfc_plot("Basal/TopTable/PD_DEG_DES_match.tsv",point_size,text_size, "Mutation", legend_size,label_size)
pd_loc_logfc_plot<-loc_logfc_plot("Basal/TopTable/PD_DEG_DES_match.tsv",point_size,text_size, "Location", legend_size,label_size,inplot_text_size)
pd_2<-ggarrange(pd_mut_logfc_plot,pd_loc_logfc_plot,
labels=c("E","F"),
font.label=list(color="black",size= text_size),
ncol=2)
tpm_rate_plot<-
ggplot(ed_1_merge,aes(x=Expression_TPM, y=Editing_Rate))+
theme_bw() +
geom_jitter(aes(color=Disease),alpha=0.8, size = 3)+
scale_color_manual(values = wes_palette(n=4,name="GrandBudapest1"))+
stat_cor(size = inplot_text_size,
label.x =0,
label.y=0.8)+
labs(x = "log(Expression TPM)", y = "RNA Editing Rate")+
theme(axis.text.x=element_text(size=text_size),
axis.text.y=element_text(size=text_size))+
theme(text = element_text(size =text_size))+
labs(title="MTRNR2L8 Noncoding TPM vs Editing Rate")+
theme(plot.title = element_text(size=10, face="bold", hjust=0.5))+
theme(legend.key.size = unit(legend_size,'cm'),
legend.title = element_text(color = "black", size =legend_text_size),
legend.text = element_text(color = "black", size = legend_text_size))+
guides(color = guide_legend(override.aes = list(size = 7)))
load("/Users/hyominseo/Desktop/RAJ/Gene_Differential/Basal/MyND_811_gene_data.RData")
tpm<-mynd_tpm%>%dplyr::filter(grepl("ENSG00000255823.4",rownames(.)))
tpm<-as.data.frame(t(tpm))
tpm<-tpm%>%dplyr::rename("Expression_TPM"="ENSG00000255823.4")
tpm<-tpm%>%dplyr::filter(Expression_TPM<50.0)
tpm<-tpm%>%mutate(Expression_TPM = log2(Expression_TPM+1))
tpm<-tpm%>%rownames_to_column("Sample")
ed_1<-editing%>%dplyr::filter(grepl("chr11:10508455:C:T",rownames(.)))
ed_1<-ed_1%>%dplyr::select(-editing_index)
ed_1<-as.data.frame(t(ed_1))
ed_1<-ed_1%>%dplyr::rename("Editing_Rate"="chr11:10508455:C:T")
load("/Users/hyominseo/Desktop/RAJ/Gene_Differential/Basal/MyND_811_gene_data.RData")
tpm<-mynd_tpm%>%dplyr::filter(grepl("ENSG00000255823.4",rownames(.)))
tpm<-as.data.frame(t(tpm))
tpm<-tpm%>%dplyr::rename("Expression_TPM"="ENSG00000255823.4")
tpm<-tpm%>%dplyr::filter(Expression_TPM<50.0)
tpm<-tpm%>%mutate(Expression_TPM = log2(Expression_TPM+1))
tpm<-tpm%>%rownames_to_column("Sample")
ed_1<-editing%>%dplyr::filter(grepl("chr11:10508455:C:T",rownames(.)))
View(editing)
load("/Users/hyominseo/Desktop/RAJ/Gene_Differential/Basal/MyND_811_gene_data.RData")
load("/Users/hyominseo/Desktop/RAJ/Gene_Differential/Basal/MyND_811_gene_data.RData")
# All Batch - PD vs Control
support<-mynd_meta%>%dplyr::filter(grepl("Control|PD",disease))%>%
dplyr::select(c('batch','disease','sex','age'))
writeLines("td, th { padding : 6px } th { background-color : blue ; color : white; border : 1px solid white; } td { color : blue ; border : 1px solid blue }", con = "mystyle.css")
knitr::kable(table(support$batch,support$disease), format = "simple", table.attr = "style='width:80%;'",caption = "Basal Monocytes 691 Batch Distribution")
load("/Users/hyominseo/Desktop/RAJ/Gene_Differential/Basal/MyND_811_gene_data.RData")
load("/Users/hyominseo/Desktop/RAJ/Basal_Limma/Rdata/mynd_data_2.RData")
tpm<-mynd_tpm%>%dplyr::filter(grepl("ENSG00000255823.4",rownames(.)))
tpm<-as.data.frame(t(tpm))
tpm<-tpm%>%dplyr::rename("Expression_TPM"="ENSG00000255823.4")
tpm<-tpm%>%dplyr::filter(Expression_TPM<50.0)
tpm<-tpm%>%mutate(Expression_TPM = log2(Expression_TPM+1))
tpm<-tpm%>%rownames_to_column("Sample")
ed_1<-editing%>%dplyr::filter(grepl("chr11:10508455:C:T",rownames(.)))
ed_1<-ed_1%>%dplyr::select(-editing_index)
ed_1<-as.data.frame(t(ed_1))
ed_1<-ed_1%>%dplyr::rename("Editing_Rate"="chr11:10508455:C:T")
ed_1<-ed_1%>%rownames_to_column("Sample")
ed_1<-ed_1%>%dplyr::filter( Sample %in% tpm$Sample)
tpm<-tpm%>%dplyr::filter( Sample %in% ed_1$Sample)
ed_1_merge <- merge(tpm,ed_1,by = "Sample")
disease<-mynd_meta%>%rownames_to_column("Sample")
disease<-disease%>%dplyr::select(c("disease","Sample"))
disease<-disease%>%dplyr::filter( Sample %in% ed_1_merge$Sample)
ed_1_merge <- merge(ed_1_merge,disease,by = "Sample")
ed_1_merge <- ed_1_merge%>%dplyr::filter(grepl("PD|Control",disease))
ed_1_merge$Mutation<-c("UTR3, C:T")
ed_1_merge<-ed_1_merge%>%dplyr::rename("Disease" = "disease")
#ed_1_merge<-ed_1_merge%>%dplyr::filter(Expression_TPM<50.0)
text_size =12
title_text_size = 12
point_size=2
legend_size = 0.6
legend_text_size = 8
label_size = 2
inplot_text_size=4
#load("/Users/hyominseo/Desktop/RAJ/Basal_Limma/Rdata/pd_vol_anno_plot.RData")
pd_vol_plot<-vol_plot("Basal/TopTable/PD_Control_P_Gene.tsv",point_size, text_size, title_text_size, "Differentially Expressed Genes",label_size)
pd_path_pval_plot<-path_pval_plot("Basal/TopTable/PD_DEG_DES_path_match.tsv","Shared Pathways",point_size,text_size,title_text_size)
pd_1<-ggarrange(pd_vol_plot, pd_path_pval_plot,
labels=c("C","D"),
font.label=list(color="black",size= text_size),
ncol=2)
pd_mut_logfc_plot<-mut_logfc_plot("Basal/TopTable/PD_DEG_DES_match.tsv",point_size,text_size, "Mutation", legend_size,label_size)
pd_loc_logfc_plot<-loc_logfc_plot("Basal/TopTable/PD_DEG_DES_match.tsv",point_size,text_size, "Location", legend_size,label_size,inplot_text_size)
pd_2<-ggarrange(pd_mut_logfc_plot,pd_loc_logfc_plot,
labels=c("E","F"),
font.label=list(color="black",size= text_size),
ncol=2)
tpm_rate_plot<-
ggplot(ed_1_merge,aes(x=Expression_TPM, y=Editing_Rate))+
theme_bw() +
geom_jitter(aes(color=Disease),alpha=0.8, size = 3)+
scale_color_manual(values = wes_palette(n=4,name="GrandBudapest1"))+
stat_cor(size = inplot_text_size,
label.x =0,
label.y=0.8)+
labs(x = "log(Expression TPM)", y = "RNA Editing Rate")+
theme(axis.text.x=element_text(size=text_size),
axis.text.y=element_text(size=text_size))+
theme(text = element_text(size =text_size))+
labs(title="MTRNR2L8 Noncoding TPM vs Editing Rate")+
theme(plot.title = element_text(size=10, face="bold", hjust=0.5))+
theme(legend.key.size = unit(legend_size,'cm'),
legend.title = element_text(color = "black", size =legend_text_size),
legend.text = element_text(color = "black", size = legend_text_size))+
guides(color = guide_legend(override.aes = list(size = 7)))
tpm_rate_plot<-ggarrange(tpm_rate_plot,
labels =c("G"),
font.label=list(color="black",size= text_size))
tpm_rate_plot<-annotate_figure(tpm_rate_plot,
top=text_grob("DES and DEG Shared Gene",
color = "black", face = "bold", size =title_text_size))
all_plot<-ggarrange(pd_1,pd_2,tpm_rate_plot, nrow=3)
#all_plot<-ggarrange(lps_1_plot,lps_2_plot,tpm_rate_plot,
#                    nrow=3)
ggsave(plot=all_plot,filename="Basal/Figures/figure4:basal_all_plot.jpg",width = 10, height = 8,dpi = 600)
knitr::include_graphics("Basal/Figures/figure4:basal_all_plot.jpg")
PD_DEG_DES_match<-read_tsv("MyND/TopTable/PD_DEG_DES_path_match.tsv")
PD_DEG_DES_match<-read_tsv("Basal/TopTable/PD_DEG_DES_path_match.tsv")
knitr::kable(table(PD_DEG_DES_match$source.x), "simple", caption = "DEGenes_DESites_matched pathway", table.attr = "style='width:100%;'",col.names=c("GO: source", "Count"))
PD_Control_DE_Sites<-read_tsv("Basal/TopTable/PD_Control_1_toptable.tsv")%>%
dplyr::filter(adj.P.Val <= 0.05)
PD_Control_DE_Sites_Gene<-read_tsv("Basal/TopTable/PD_Control_DE_Sites.tsv")
PD_Control_DEG<-read_tsv("Basal/TopTable/PD_Control_DEG.tsv")
PD_Control_P_Gene<-read_tsv("Basal/TopTable/PD_Control_P_Gene.tsv")
Category<-c("DE_Sites, Site count", "DE_Sites_Gencode_Annotated, Gene count", "DE_Genes, Gene count","P_val_Genes, Gene count")
Threshold<-c("adj.P < 0.05","adj.P < 0.05","adj.P.Val < 0.05 & abs(logFC) > 1","adj.P.Val < 0.05")
Count<-c(as.integer(nrow(PD_Control_DE_Sites)), as.integer(nrow(PD_Control_DE_Sites_Gene)),
as.integer(nrow(PD_Control_DEG)),as.integer(nrow(PD_Control_P_Gene)))
Unique_Gene<- c("All Sites Unique",as.integer(length(unique(PD_Control_DE_Sites_Gene$GENENAME))),
as.integer(length(unique(PD_Control_DEG$GENENAME))),
as.integer(length(unique(PD_Control_P_Gene$GENENAME))))
df<-data.frame(Threshold, Category, Count, Unique_Gene)
knitr::kable(df, "simple", caption = "All Count", table.attr = "style='width:100%;'")
text_size =12
title_text_size=12
legend_size =1.2
legend_text_size = 12
point_size =2.4
label_size = 3
pd_risk<-process_deg("Basal/TopTable/PD_Control.tsv")
highlight_df<-pd_risk%>%dplyr::filter(grepl("LRRK2|PLCG2|PILRA",GENENAME))
pd_risk_plot<-vol_plot(pd_risk,point_size, text_size, title_text_size, "PD vs Control ",label_size)+
geom_label_repel(data = highlight_df, aes(label = GENENAME, col = GENENAME),
box.padding   = 0, max.overlaps = 3,
point.padding = 0, force = 80,
segment.size  = 0.2,
point.size =point_size,
fontface="bold",
nudge_x = -0.1,hjust =0,
size = label_size)+
geom_point(data = highlight_df, aes(label = GENENAME, col = GENENAME),size=3)+
theme(legend.position = "none")
text_size =12
title_text_size=12
legend_size =1.2
legend_text_size = 12
point_size =2.4
label_size = 3
process_deg<-function(table_in){
t<-read_tsv(table_in)
t$DE_genes<-case_when(
t$adj.P.Val < 0.05 & abs(t$logFC) > 1 ~ "TRUE",
t$adj.P.Val > 0.05 & abs(t$logFC) < 1 ~ "FALSE"
)
# Adding UP and Down regulated gene count
t$DE_direction<-case_when(
t$DE_genes == "TRUE" & t$logFC > 0.00 ~ "UP",
t$DE_genes == "TRUE" & t$logFC < 0.00 ~ "DOWN"
)
t
}
pd_risk<-process_deg("Basal/TopTable/PD_Control.tsv")
highlight_df<-pd_risk%>%dplyr::filter(grepl("LRRK2|PLCG2|PILRA",GENENAME))
pd_risk_plot<-vol_plot(pd_risk,point_size, text_size, title_text_size, "PD vs Control ",label_size)+
geom_label_repel(data = highlight_df, aes(label = GENENAME, col = GENENAME),
box.padding   = 0, max.overlaps = 3,
point.padding = 0, force = 80,
segment.size  = 0.2,
point.size =point_size,
fontface="bold",
nudge_x = -0.1,hjust =0,
size = label_size)+
geom_point(data = highlight_df, aes(label = GENENAME, col = GENENAME),size=3)+
theme(legend.position = "none")
View(highlight_df)
vol_plot<-function(t, point_size, text_size,title_text_size,plot_title,label_size){
vol_plot<- ggplot(t, aes(x=logFC, y=-log10(P.Value), col = DE_direction))+
geom_point(size =point_size, alpha=0.7)+
theme_bw()+
scale_color_manual(values = wes_palette(n=5,name="Rushmore1"))+
geom_vline(xintercept=c(-1,1), col ="black",linetype="longdash")+
labs(title=plot_title)+
theme(plot.title = element_text(size=title_text_size, face="bold", hjust=0.5))+
theme(text = element_text(size = text_size)) +
theme(legend.position='none')
vol_plot
}
process_deg<-function(table_in){
t<-read_tsv(table_in)
t$DE_genes<-case_when(
t$adj.P.Val < 0.05 & abs(t$logFC) > 1 ~ "TRUE",
t$adj.P.Val > 0.05 & abs(t$logFC) < 1 ~ "FALSE"
)
# Adding UP and Down regulated gene count
t$DE_direction<-case_when(
t$DE_genes == "TRUE" & t$logFC > 0.00 ~ "UP",
t$DE_genes == "TRUE" & t$logFC < 0.00 ~ "DOWN"
)
t
}
pd_risk<-process_deg("Basal/TopTable/PD_Control.tsv")
highlight_df<-pd_risk%>%dplyr::filter(grepl("LRRK2|PLCG2|PILRA",GENENAME))
pd_risk_plot<-vol_plot(pd_risk,point_size, text_size, title_text_size, "PD vs Control ",label_size)+
geom_label_repel(data = highlight_df, aes(label = GENENAME, col = GENENAME),
box.padding   = 0, max.overlaps = 3,
point.padding = 0, force = 80,
segment.size  = 0.2,
point.size =point_size,
fontface="bold",
nudge_x = -0.1,hjust =0,
size = label_size)+
geom_point(data = highlight_df, aes(label = GENENAME, col = GENENAME),size=3)+
theme(legend.position = "none")
ggsave(plot=pd_risk_plot,filename="Basal/Figures/figure5:basal_risk_plot.jpg",width = 10, height = 8,dpi = 600)
knitr::include_graphics("Basal/Figures/figure5:basal_risk_plot.jpg")
pd_risk<-process_deg("Basal/TopTable/PD_Control.tsv")
highlight_df<-pd_risk%>%dplyr::filter(grepl("LRRK2|PLCG2|PILRA",GENENAME))
pd_risk_plot<-vol_plot(pd_risk,point_size, text_size, title_text_size, "PD vs Control ",label_size)+
geom_label_repel(data = highlight_df, aes(label = GENENAME, col = GENENAME),
box.padding   = 0, max.overlaps = 3,
point.padding = 0, force = 80,
segment.size  = 0.2,
point.size =point_size,
fontface="bold",
nudge_x = -0.1,hjust =0,
size = label_size)+
geom_point(data = highlight_df, aes(label = GENENAME, col = GENENAME),size=3)+
theme(legend.position = "none")
ggsave(plot=pd_risk_plot,filename="Basal/Figures/figure5:basal_risk_plot.jpg",width = 10, height = 4,dpi = 600)
load("/Users/hyominseo/Desktop/RAJ/Gene_Differential/Basal/MyND_811_gene_data.RData")
# All Batch - PD vs Control
support<-mynd_meta%>%dplyr::filter(grepl("Control|PD",disease))%>%
dplyr::select(c('batch','disease','sex','age'))
writeLines("td, th { padding : 6px } th { background-color : blue ; color : white; border : 1px solid white; } td { color : blue ; border : 1px solid blue }", con = "mystyle.css")
knitr::kable(table(support$batch,support$disease), format = "simple", table.attr = "style='width:80%;'",caption = "Basal Monocytes 691 Batch Distribution")
string<-"Genes that have tpm>1 in basal monocytes for PD and Control sample: 58929 ->"
number<-as.integer(nrow(mynd_count))
print(paste(string,number))
knitr::include_graphics("Basal/Figures/figure1:pd_vol_plot.jpg")
PD_Control_DEG<- read_tsv("Basal/TopTable/PD_Control_P_Gene.tsv")
DEG_UP_Count<-c( as.integer(length(which(PD_Control_DEG$DE_direction == "UP"))))
DEG_DOWN_Count<-c( as.integer(length(which(PD_Control_DEG$DE_direction == "DOWN"))))
Model<-c("PD_Control_PVal_logFC")
df<-data.frame( Model,DEG_UP_Count, DEG_DOWN_Count)
knitr::kable(df, format = "simple", table.attr = "style='width:80%;'",caption = "Basal Monocytes threashold(P) DEG counts", col.names=c('DEG_Limma_Model','DEG_UP_Count','DEG_DOWN_Count'))
PD_Control_DEG<-read_tsv("Basal/TopTable/PD_Control_P_Gene.tsv")
# Taking every ".xx" out to match with gencode+anno+DES matrix
PD_Control_DEG$GENEID<-gsub("\\..*","",PD_Control_DEG$GENEID)
PD_Control_DE_Sites<-read_tsv("Basal/TopTable/PD_Control_DE_Sites.tsv")
number<-length(intersect(PD_Control_DEG$GENEID, PD_Control_DE_Sites$GENEID))
gene<-intersect(PD_Control_DEG$GENEID, PD_Control_DE_Sites$GENEID)
string_1<-"Number of Gene that is present in both Basal Monocyte DEG(P) and DES:"
print(paste0(string_1,number))
PD_Control_P_Gene<- read_tsv("Basal/TopTable/PD_Control_P_Gene.tsv")
DEG_UP_Count<-c( as.integer(length(which(PD_Control_P_Gene$DE_direction == "UP"))))
DEG_DOWN_Count<-c( as.integer(length(which(PD_Control_P_Gene$DE_direction == "DOWN"))))
Model<-c("PD_Control_P_Val")
df<-data.frame( Model, DEG_UP_Count, DEG_DOWN_Count)
knitr::kable(df, format = "simple", table.attr = "style='width:80%;'",caption = "Basal Monocytes_only P val threashold DEG counts", col.names=c('DEG_Limma_Model','DEG_UP_Count','DEG_DOWN_Count'))
PD_Control_DEG<-read_tsv("Basal/TopTable/PD_Control_DEG.tsv")
# Taking every ".xx" out to match with gencode+anno+DES matrix
PD_Control_DEG$GENEID<-gsub("\\..*","",PD_Control_DEG$GENEID)
PD_Control_DE_Sites<-read_tsv("Basal/TopTable/PD_Control_DE_Sites.tsv")
number<-length(intersect(PD_Control_DEG$GENEID, PD_Control_DE_Sites$GENEID))
gene<-intersect(PD_Control_DEG$GENEID, PD_Control_DE_Sites$GENEID)
string_1<-"Number of Gene that is present in both Basal Monocyte DEG(P) and DES:"
print(paste0(string_1,number))
PD_Control_DEG<-read_tsv("Basal/TopTable/PD_Control_DEG.tsv")
# Taking every ".xx" out to match with gencode+anno+DES matrix
PD_Control_DEG$GENEID<-gsub("\\..*","",PD_Control_DEG$GENEID)
PD_Control_DE_Sites<-read_tsv("Basal/TopTable/PD_Control_DE_Sites.tsv")
number<-length(intersect(PD_Control_DEG$GENEID, PD_Control_DE_Sites$GENEID))
gene<-intersect(PD_Control_DEG$GENEID, PD_Control_DE_Sites$GENEID)
string_1<-"Number of Gene that is present in both Basal Monocyte DEG(P/logFC) and DES:"
print(paste0(string_1,number))
PD_Control_P_Gene<-read_tsv("Basal/TopTable/PD_Control.tsv")
PD_Control_P_Gene$DE_genes<-case_when(
# defining sig DEGs
PD_Control_P_Gene$adj.P.Val < 0.05  ~ "TRUE",
PD_Control_P_Gene$adj.P.Val > 0.05  ~ "FALSE"
)
DEgenes_count<-as.integer(length(which(PD_Control_P_Gene$DE_genes == "TRUE")))
string<-"## Number of Differentially Expressed Genes (adj.P.Val < 0.05 ) are: "
print(paste(string, DEgenes_count))
# Adding UP and Down regulated gene count
PD_Control_P_Gene$DE_direction<-case_when(
PD_Control_P_Gene$DE_genes == "TRUE" & PD_Control_P_Gene$logFC > 0.00 ~ "UP",
PD_Control_P_Gene$DE_genes == "TRUE" & PD_Control_P_Gene$logFC < 0.00 ~ "DOWN"
)
filepath<-file.path("/Users/hyominseo/Desktop/RAJ/Gene_Differential/Basal/TopTable")
write.table(PD_Control_P_Gene, file = file.path(filepath,"PD_Control_P_Gene.tsv"),  row.names = F, sep = "\t", quote = F)
PD_Control_P_Gene<-read_tsv("Basal/TopTable/PD_Control.tsv")
PD_Control_P_Gene$DE_genes<-case_when(
# defining sig DEGs
PD_Control_P_Gene$adj.P.Val < 0.05  ~ "TRUE",
PD_Control_P_Gene$adj.P.Val > 0.05  ~ "FALSE"
)
DEgenes_count<-as.integer(length(which(PD_Control_P_Gene$DE_genes == "TRUE")))
string<-"## Number of Differentially Expressed Genes (adj.P.Val < 0.05 ) are: "
print(paste(string, DEgenes_count))
# Adding UP and Down regulated gene count
PD_Control_P_Gene$DE_direction<-case_when(
PD_Control_P_Gene$DE_genes == "TRUE" & PD_Control_P_Gene$logFC > 0.00 ~ "UP",
PD_Control_P_Gene$DE_genes == "TRUE" & PD_Control_P_Gene$logFC < 0.00 ~ "DOWN"
)
filepath<-file.path("/Users/hyominseo/Desktop/RAJ/Gene_Differential/Basal/TopTable")
write.table(PD_Control_P_Gene, file = file.path(filepath,"PD_Control_P_Gene.tsv"),  row.names = F, sep = "\t", quote = F)
PD_Control_P_Gene<- read_tsv("Basal/TopTable/PD_Control_P_Gene.tsv")
DEG_UP_Count<-c( as.integer(length(which(PD_Control_P_Gene$DE_direction == "UP"))))
DEG_DOWN_Count<-c( as.integer(length(which(PD_Control_P_Gene$DE_direction == "DOWN"))))
Model<-c("PD_Control_P_Val")
df<-data.frame( Model, DEG_UP_Count, DEG_DOWN_Count)
knitr::kable(df, format = "simple", table.attr = "style='width:80%;'",caption = "Basal Monocytes only P val threashold DEG counts", col.names=c('DEG_Limma_Model','DEG_UP_Count','DEG_DOWN_Count'))
PD_Control_P_Gene<- read_tsv("Basal/TopTable/PD_Control_P_Gene.tsv")
DEG_UP_Count<-c( as.integer(length(which(PD_Control_P_Gene$DE_direction == "UP"))))
DEG_DOWN_Count<-c( as.integer(length(which(PD_Control_P_Gene$DE_direction == "DOWN"))))
Model<-c("PD_Control_P_Val")
df<-data.frame( Model, DEG_UP_Count, DEG_DOWN_Count)
knitr::kable(df, format = "simple", table.attr = "style='width:80%;'",caption = "Basal Monocytes only P val threashold DEG counts", col.names=c('DEG_Limma_Model','DEG_UP_Count','DEG_DOWN_Count'))
PD_Control_P_Gene<-read_tsv("Basal/TopTable/PD_Control_P_Gene.tsv")
PD_Control_P_Gene_a<-PD_Control_P_Gene%>%dplyr::filter(grepl("ADAR.*|APOBEC.*", GENENAME))
PD_Control_P_Gene_a<-PD_Control_P_Gene_a%>%dplyr::select(-c(AveExpr, t, B,DE_genes))%>%arrange(desc(logFC))
knitr::kable(PD_Control_P_Gene_a, "simple", caption = "A~ genes in PD_Control_P_Gene", table.attr = "style='width:100%;'")
PD_Control_P_Gene<- read_tsv("Basal/TopTable/PD_Control_P_Gene.tsv")
# Taking every ".xx" out to match with gencode+anno+DES matrix
PD_Control_P_Gene$GENEID<-gsub("\\..*","",PD_Control_P_Gene$GENEID)
PD_Control_DE_Sites<-read_tsv("Basal/TopTable/PD_Control_DE_Sites.tsv")
number<-length(intersect(PD_Control_P_Gene$GENEID, PD_Control_DE_Sites$GENEID))
gene<-intersect(PD_Control_P_Gene$GENEID, PD_Control_DE_Sites$GENEID)
string_1<-"Number of Gene that is present in both Basal Monocyte PVal Genes and DES:"
print(paste0(string_1,number))
knitr::include_graphics("Basal/Figures/figure2:pd_logfc_plot.jpg")
knitr::include_graphics("Basal/Figures/figure2:pd_logfc_plot.jpg")
pct<-function(annotation, editing_index){
annotation_type<-annotation%>%dplyr::filter(grepl(editing_index,Editing_Index))
print(nrow(annotation_type))
print(table(annotation_type$Location))#location
print(table(annotation_type$Mutation))#mutation
}
PD_DES_DEG<- read_tsv("Basal/TopTable/PD_DEG_DES_match.tsv")
pct(PD_DES_DEG,"A:G")
pct(PD_DES_DEG,"C:T")
knitr::include_graphics("Basal/Figures/figure3:pd_path_pval_plot.jpg")
PD_DEG_DES_match<-read_tsv("Basal/TopTable/PD_DEG_DES_path_match.tsv")
knitr::kable(table(PD_DEG_DES_match$source.x), "simple", caption = "DEGenes_DESites_matched pathway", table.attr = "style='width:100%;'",col.names=c("GO: source", "Count"))
knitr::include_graphics("Basal/Figures/figure5:basal_risk_plot.jpg")
